import{_ as e,c as n,o as t,a4 as a}from"./chunks/framework.Bl20_RFa.js";const k=JSON.parse('{"title":"tm_urlencode - Functions - Configuration Language","description":"The tm_urlencode function applies URL encoding to a given string.","frontmatter":{"title":"tm_urlencode - Functions - Configuration Language","description":"The tm_urlencode function applies URL encoding to a given string."},"headers":[],"relativePath":"cli/code-generation/functions/tm_urlencode.md","filePath":"cli/code-generation/functions/tm_urlencode.md"}'),i={name:"cli/code-generation/functions/tm_urlencode.md"},s=a(`<h1 id="tm-urlencode-function" tabindex="-1"><code>tm_urlencode</code> Function <a class="header-anchor" href="#tm-urlencode-function" aria-label="Permalink to &quot;\`tm_urlencode\` Function&quot;">​</a></h1><p><code>tm_urlencode</code> applies URL encoding to a given string.</p><p>This function identifies characters in the given string that would have a special meaning when included as a query string argument in a URL and escapes them using <a href="https://tools.ietf.org/html/rfc3986#section-2.1" target="_blank" rel="noreferrer">RFC 3986 &quot;percent encoding&quot;</a>.</p><p>The exact set of characters escaped may change over time, but the result is guaranteed to be interpolatable into a query string argument without inadvertently introducing additional delimiters.</p><p>If the given string contains non-ASCII characters, these are first encoded as UTF-8 and then percent encoding is applied separately to each UTF-8 byte.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_urlencode(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;Hello World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hello+World%21</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_urlencode(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;☃&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">%E2%98%83</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_urlencode(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;http://example.com/search?q=\${</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;terraform urlencode&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://example.com/search?q</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=terraform+urlencode</span></span></code></pre></div>`,7),o=[s];function l(r,c,h,p,d,u){return t(),n("div",null,o)}const m=e(i,[["render",l]]);export{k as __pageData,m as default};
