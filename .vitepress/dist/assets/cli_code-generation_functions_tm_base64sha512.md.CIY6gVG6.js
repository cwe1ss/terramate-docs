import{_ as e,c as a,o as t,a4 as s}from"./chunks/framework.Bl20_RFa.js";const _=JSON.parse('{"title":"tm_base64sha512 - Functions - Configuration Language","description":"The tm_base64sha512 function computes the SHA512 hash of a given string and\\nencodes it with Base64.","frontmatter":{"title":"tm_base64sha512 - Functions - Configuration Language","description":"The tm_base64sha512 function computes the SHA512 hash of a given string and\\nencodes it with Base64."},"headers":[],"relativePath":"cli/code-generation/functions/tm_base64sha512.md","filePath":"cli/code-generation/functions/tm_base64sha512.md"}'),n={name:"cli/code-generation/functions/tm_base64sha512.md"},i=s('<h1 id="tm-base64sha512-function" tabindex="-1"><code>tm_base64sha512</code> Function <a class="header-anchor" href="#tm-base64sha512-function" aria-label="Permalink to &quot;`tm_base64sha512` Function&quot;">​</a></h1><p><code>tm_base64sha512</code> computes the SHA512 hash of a given string and encodes it with Base64. This is not equivalent to <code>tm_base64encode(tm_sha512(&quot;test&quot;))</code> since <code>tm_sha512()</code> returns hexadecimal representation.</p><p>The given string is first encoded as UTF-8 and then the SHA512 algorithm is applied as defined in <a href="https://tools.ietf.org/html/rfc4634" target="_blank" rel="noreferrer">RFC 4634</a>. The raw hash is then encoded with Base64 before returning. Terraform uses the &quot;standard&quot; Base64 alphabet as defined in <a href="https://tools.ietf.org/html/rfc4648#section-4" target="_blank" rel="noreferrer">RFC 4648 section 4</a>.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_base64sha512(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MJ7MSJwS1utMxA9QyQLytNDtd+5RGnx6m808qG1M2G+YndNbxf9JlnDaNCVbRbDP2DDoH2Bdz33FVC6TrpzXbw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">==</span></span></code></pre></div><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_filebase64sha512"><code>tm_filebase64sha512</code></a> calculates the same hash from the contents of a file rather than from a string value.</li><li><a href="./tm_sha512"><code>tm_sha512</code></a> calculates the same hash but returns the result in a more-verbose hexadecimal encoding.</li></ul>',7),o=[i];function h(r,c,l,d,u,m){return t(),a("div",null,o)}const f=e(n,[["render",h]]);export{_ as __pageData,f as default};
