import{_ as i,c as s,o as e,a4 as t}from"./chunks/framework.Bl20_RFa.js";const g=JSON.parse('{"title":"tm_fileexists - Functions - Configuration Language","description":"The tm_fileexists function determines whether a file exists at a given path.","frontmatter":{"title":"tm_fileexists - Functions - Configuration Language","description":"The tm_fileexists function determines whether a file exists at a given path."},"headers":[],"relativePath":"cli/code-generation/functions/tm_fileexists.md","filePath":"cli/code-generation/functions/tm_fileexists.md"}'),a={name:"cli/code-generation/functions/tm_fileexists.md"},n=t('<h1 id="tm-fileexists-function" tabindex="-1"><code>tm_fileexists</code> Function <a class="header-anchor" href="#tm-fileexists-function" aria-label="Permalink to &quot;`tm_fileexists` Function&quot;">​</a></h1><p><code>tm_fileexists</code> determines whether a file exists at a given path.</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tm_fileexists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path)</span></span></code></pre></div><p>Functions are evaluated during configuration parsing rather than at apply time, so this function can only be used with files that are already present on disk before Terraform takes any actions.</p><p>This function works only with regular files. If used with a directory, FIFO, or other special mode, it will return an error.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_fileexists(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/hello.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tm_fileexists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;custom-section.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;custom-section.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) : local</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default_content</span></span></code></pre></div><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_file"><code>tm_file</code></a> reads the contents of a file at a given path</li></ul>',10),l=[n];function h(o,p,r,c,d,k){return e(),s("div",null,l)}const f=i(a,[["render",h]]);export{g as __pageData,f as default};
