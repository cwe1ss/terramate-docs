import{_ as t,c as e,o as a,a4 as i}from"./chunks/framework.Bl20_RFa.js";const g=JSON.parse('{"title":"tm_timeadd - Functions - Configuration Language","description":"The tm_timeadd function adds a duration to a timestamp, returning a new timestamp.","frontmatter":{"title":"tm_timeadd - Functions - Configuration Language","description":"The tm_timeadd function adds a duration to a timestamp, returning a new timestamp."},"headers":[],"relativePath":"cli/code-generation/functions/tm_timeadd.md","filePath":"cli/code-generation/functions/tm_timeadd.md"}'),s={name:"cli/code-generation/functions/tm_timeadd.md"},o=i('<h1 id="tm-timeadd-function" tabindex="-1"><code>tm_timeadd</code> Function <a class="header-anchor" href="#tm-timeadd-function" aria-label="Permalink to &quot;`tm_timeadd` Function&quot;">​</a></h1><p><code>tm_timeadd</code> adds a duration to a timestamp, returning a new timestamp.</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tm_timeadd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(timestamp, duration)</span></span></code></pre></div><p>In the Terraform language, timestamps are conventionally represented as strings using <a href="https://tools.ietf.org/html/rfc3339" target="_blank" rel="noreferrer">RFC 3339</a> &quot;Date and Time format&quot; syntax. <code>tm_timeadd</code> requires the <code>timestamp</code> argument to be a string conforming to this syntax.</p><p><code>duration</code> is a string representation of a time difference, consisting of sequences of number and unit pairs, like <code>&quot;1.5h&quot;</code> or <code>&quot;1h30m&quot;</code>. The accepted units are <code>&quot;ns&quot;</code>, <code>&quot;us&quot;</code> (or <code>&quot;µs&quot;</code>), <code>&quot;ms&quot;</code>, <code>&quot;s&quot;</code>, <code>&quot;m&quot;</code>, and <code>&quot;h&quot;</code>. The first number may be negative to indicate a negative duration, like <code>&quot;-2h5m&quot;</code>.</p><p>The result is a string, also in RFC 3339 format, representing the result of adding the given direction to the given timestamp.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_timeadd(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;2017-11-22T00:00:00Z&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;10m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2017-11-22T00:10:00Z</span></span></code></pre></div>',8),n=[o];function d(c,r,m,u,p,l){return a(),e("div",null,n)}const _=t(s,[["render",d]]);export{g as __pageData,_ as default};
