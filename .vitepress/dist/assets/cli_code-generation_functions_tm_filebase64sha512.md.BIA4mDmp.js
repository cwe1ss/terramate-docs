import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.Bl20_RFa.js";const u=JSON.parse('{"title":"tm_filebase64sha512 - Functions - Configuration Language","description":"The tm_filebase64sha512 function computes the SHA512 hash of the contents of\\na given file and encodes it with Base64.","frontmatter":{"title":"tm_filebase64sha512 - Functions - Configuration Language","description":"The tm_filebase64sha512 function computes the SHA512 hash of the contents of\\na given file and encodes it with Base64."},"headers":[],"relativePath":"cli/code-generation/functions/tm_filebase64sha512.md","filePath":"cli/code-generation/functions/tm_filebase64sha512.md"}'),i={name:"cli/code-generation/functions/tm_filebase64sha512.md"},n=s('<h1 id="tm-filebase64sha512-function" tabindex="-1"><code>tm_filebase64sha512</code> Function <a class="header-anchor" href="#tm-filebase64sha512-function" aria-label="Permalink to &quot;`tm_filebase64sha512` Function&quot;">â€‹</a></h1><p><code>tm_filebase64sha512</code> is a variant of <a href="./tm_base64sha512"><code>tm_base64sha512</code></a> that hashes the contents of a given file rather than a literal string.</p><p>This is similar to <code>tm_base64sha512(file(filename))</code>, but because <a href="./tm_file"><code>tm_file</code></a> accepts only UTF-8 text it cannot be used to create hashes for binary files.</p>',3),o=[n];function c(h,f,_,l,r,d){return a(),t("div",null,o)}const b=e(i,[["render",c]]);export{u as __pageData,b as default};
