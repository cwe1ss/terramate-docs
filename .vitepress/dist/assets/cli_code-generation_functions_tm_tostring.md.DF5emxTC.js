import{_ as s,c as i,o as t,a4 as n}from"./chunks/framework.Bl20_RFa.js";const u=JSON.parse('{"title":"tm_tostring - Functions - Configuration Language","description":"The tm_tostring function converts a value to a string.","frontmatter":{"title":"tm_tostring - Functions - Configuration Language","description":"The tm_tostring function converts a value to a string."},"headers":[],"relativePath":"cli/code-generation/functions/tm_tostring.md","filePath":"cli/code-generation/functions/tm_tostring.md"}'),a={name:"cli/code-generation/functions/tm_tostring.md"},e=n(`<h1 id="tm-tostring-function" tabindex="-1"><code>tm_tostring</code> Function <a class="header-anchor" href="#tm-tostring-function" aria-label="Permalink to &quot;\`tm_tostring\` Function&quot;">​</a></h1><p><code>tm_tostring</code> converts its argument to a string value.</p><p>Explicit type conversions are rarely necessary in Terraform because it will convert types automatically where required. Use the explicit type conversion functions only to normalize types returned in module outputs.</p><p>Only the primitive types (string, number, and bool) and <code>null</code> can be converted to string. <code>tm_tostring(null)</code> produces a <code>null</code> value of type <code>string</code>. All other values produce an error.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tostring(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tostring(1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;1&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tostring(true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;true&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tostring(null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tostring(null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tostring([]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Invalid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> function</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> argument</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Invalid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;v&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parameter:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> convert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tuple</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> string.</span></span></code></pre></div>`,6),l=[e];function o(r,p,h,k,c,d){return t(),i("div",null,l)}const F=s(a,[["render",o]]);export{u as __pageData,F as default};
