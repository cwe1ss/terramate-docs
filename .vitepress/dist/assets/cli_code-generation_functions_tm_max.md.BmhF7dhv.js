import{_ as a,c as e,o as s,a4 as t}from"./chunks/framework.Bl20_RFa.js";const k=JSON.parse('{"title":"tm_max - Functions - Configuration Language","description":"The tm_max function takes one or more numbers and returns the greatest number.","frontmatter":{"title":"tm_max - Functions - Configuration Language","description":"The tm_max function takes one or more numbers and returns the greatest number."},"headers":[],"relativePath":"cli/code-generation/functions/tm_max.md","filePath":"cli/code-generation/functions/tm_max.md"}'),i={name:"cli/code-generation/functions/tm_max.md"},n=t('<h1 id="tm-max-function" tabindex="-1"><code>tm_max</code> Function <a class="header-anchor" href="#tm-max-function" aria-label="Permalink to &quot;`tm_max` Function&quot;">​</a></h1><p><code>tm_max</code> takes one or more numbers and returns the greatest number from the set.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_max(12,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 54</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">54</span></span></code></pre></div><p>If the numbers are in a list or set value, use <code>...</code> to expand the collection to individual arguments:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_max([12,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 54</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">54</span></span></code></pre></div><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_min"><code>tm_min</code></a>, which returns the <em>smallest</em> number from a set.</li></ul>',8),o=[n];function l(r,h,c,d,p,m){return s(),e("div",null,o)}const _=a(i,[["render",l]]);export{k as __pageData,_ as default};
