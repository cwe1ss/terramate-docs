import{_ as e,c as a,o as t,a4 as i}from"./chunks/framework.Bl20_RFa.js";const k=JSON.parse('{"title":"terramate experimental partial-eval - Command","description":"Debug Terramate expressions using the `terramate experimental partial-eval` command.","frontmatter":{"title":"terramate experimental partial-eval - Command","description":"Debug Terramate expressions using the `terramate experimental partial-eval` command."},"headers":[],"relativePath":"cli/cmdline/experimental/experimental-partial-eval.md","filePath":"cli/cmdline/experimental/experimental-partial-eval.md"}'),l={name:"cli/cmdline/experimental/experimental-partial-eval.md"},s=i('<h1 id="partial-eval" tabindex="-1">Partial Eval <a class="header-anchor" href="#partial-eval" aria-label="Permalink to &quot;Partial Eval&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This is an experimental command and is likely subject to change in the future.</p></div><p>The <code>terramate experimental partial-eval</code> command allows you to partial evaluate a Terramate expression. The difference to <a href="./experimental-eval"><code>eval</code></a> is that only the Terramate variables and Terramate functions are evaluated, all the rest is left in the expression as is.</p><p>Similarly to <a href="./experimental-eval">experimental eval</a>, for security reasons the <code>partial-eval</code> <strong>does not</strong> support <strong>filesystem related</strong> <a href="./../../code-generation/functions/">functions</a>. Below is the list of functions <strong>not available</strong> in this command:</p><ul><li>tm_abspath,</li><li>tm_file</li><li>tm_fileexists</li><li>tm_fileset</li><li>tm_filebase64</li><li>tm_filebase64sha256</li><li>tm_filebase64sha512</li><li>tm_filemd5</li><li>tm_filesha1</li><li>tm_filesha256</li><li>tm_filesha512</li><li>tm_templatefile</li></ul><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p><code>terramate experimental partial-eval EXPRS</code></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p>Evaluate an expression that returns the uppercase version of the current stack name:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> experimental</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> partial-eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&quot;${var.variable} ${tm_upper(terramate.stack.name)}&quot;&#39;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">variable</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">} MY STACK&quot;</span></span></code></pre></div>',10),r=[s];function n(p,o,m,h,c,d){return t(),a("div",null,r)}const _=e(l,[["render",n]]);export{k as __pageData,_ as default};
