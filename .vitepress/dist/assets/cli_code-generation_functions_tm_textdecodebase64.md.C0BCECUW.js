import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.Bl20_RFa.js";const _=JSON.parse('{"title":"tm_textdecodebase64 - Functions - Configuration Language","description":"The tm_textdecodebase64 function decodes a string that was previously Base64-encoded,\\nand then interprets the result as characters in a specified character encoding.","frontmatter":{"title":"tm_textdecodebase64 - Functions - Configuration Language","description":"The tm_textdecodebase64 function decodes a string that was previously Base64-encoded,\\nand then interprets the result as characters in a specified character encoding."},"headers":[],"relativePath":"cli/code-generation/functions/tm_textdecodebase64.md","filePath":"cli/code-generation/functions/tm_textdecodebase64.md"}'),n={name:"cli/code-generation/functions/tm_textdecodebase64.md"},o=s('<h1 id="tm-textdecodebase64-function" tabindex="-1"><code>tm_textdecodebase64</code> Function <a class="header-anchor" href="#tm-textdecodebase64-function" aria-label="Permalink to &quot;`tm_textdecodebase64` Function&quot;">​</a></h1><p><code>tm_textdecodebase64</code> function decodes a string that was previously Base64-encoded, and then interprets the result as characters in a specified character encoding.</p><p>Terraform uses the &quot;standard&quot; Base64 alphabet as defined in <a href="https://tools.ietf.org/html/rfc4648#section-4" target="_blank" rel="noreferrer">RFC 4648 section 4</a>.</p><p>The <code>encoding_name</code> argument must contain one of the encoding names or aliases recorded in <a href="https://www.iana.org/assignments/character-sets/character-sets.xhtml" target="_blank" rel="noreferrer">the IANA character encoding registry</a>. Terraform supports only a subset of the registered encodings, and the encoding support may vary between Terraform versions.</p><p>Terraform accepts the encoding name <code>UTF-8</code>, which will produce the same result as <a href="./tm_base64decode"><code>tm_base64decode</code></a>.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_textdecodebase64(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;SABlAGwAbABvACAAVwBvAHIAbABkAA==&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;UTF-16LE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hello</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> World</span></span></code></pre></div><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_textencodebase64"><code>tm_textencodebase64</code></a> performs the opposite operation, applying target encoding and then Base64 to a string.</li><li><a href="./tm_base64decode"><code>tm_base64decode</code></a> is effectively a shorthand for <code>tm_textdecodebase64</code> where the character encoding is fixed as <code>UTF-8</code>.</li></ul>',9),i=[o];function c(d,r,h,l,p,u){return a(),t("div",null,i)}const g=e(n,[["render",c]]);export{_ as __pageData,g as default};
