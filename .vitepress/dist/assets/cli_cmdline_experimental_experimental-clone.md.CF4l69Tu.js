import{_ as e,c as a,o as t,a4 as s}from"./chunks/framework.Bl20_RFa.js";const u=JSON.parse('{"title":"terramate experimental clone - Command","description":"Clone stacks and child stacks to promote them through environments or easily create new resources duplicating existing resource configurations by using the `terramate experimental clone` command.","frontmatter":{"title":"terramate experimental clone - Command","description":"Clone stacks and child stacks to promote them through environments or easily create new resources duplicating existing resource configurations by using the `terramate experimental clone` command."},"headers":[],"relativePath":"cli/cmdline/experimental/experimental-clone.md","filePath":"cli/cmdline/experimental/experimental-clone.md"}'),i={name:"cli/cmdline/experimental/experimental-clone.md"},n=s('<h1 id="clone" tabindex="-1">Clone <a class="header-anchor" href="#clone" aria-label="Permalink to &quot;Clone&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This is an experimental command and is likely subject to change in the future.</p></div><p>The <code>terramate experimental clone</code> command clones stacks and nested stacks from a source to a target directory. Terramate will recursively copy the stack files and directories, and automatically update the <code>stack.id</code> with generated UUIDs for the cloned stacks.</p><p>The source directory can be a stack itself, or it can contain stacks in sub-directories.</p><p>The flag <code>--skip-child-stacks</code> can be set to change this behavior, so stacks in sub-directories will be ignored; in this case, the source directory itself must be a stack.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p><code>terramate experimental clone [options] &lt;source&gt; &lt;target&gt;</code></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p>Clone a stack <code>alice</code> to target <code>bob</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> experimental</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stacks/alice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stacks/bob</span></span></code></pre></div><p>Clone all stacks within directory <code>stacks</code> to <code>cloned-stacks</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> experimental</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stacks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cloned-stacks</span></span></code></pre></div>',12),c=[n];function o(l,r,d,p,h,m){return t(),a("div",null,c)}const g=e(i,[["render",o]]);export{u as __pageData,g as default};
