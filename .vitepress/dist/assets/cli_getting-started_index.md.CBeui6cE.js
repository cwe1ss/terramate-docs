import{_ as a,c as s,o as e,a4 as n}from"./chunks/framework.Bl20_RFa.js";const g=JSON.parse('{"title":"Quickstart: Getting Started with Terramate and Terraform","description":"Get started with Terramate CLI in 5 minutes. Learn basic Terramate concepts such as stacks, code generation and change detection using Terramate CLI and Terraform.","frontmatter":{"title":"Quickstart: Getting Started with Terramate and Terraform","description":"Get started with Terramate CLI in 5 minutes. Learn basic Terramate concepts such as stacks, code generation and change detection using Terramate CLI and Terraform."},"headers":[],"relativePath":"cli/getting-started/index.md","filePath":"cli/getting-started/index.md"}'),i={name:"cli/getting-started/index.md"},t=n(`<h1 id="quickstart" tabindex="-1">Quickstart <a class="header-anchor" href="#quickstart" aria-label="Permalink to &quot;Quickstart&quot;">‚Äã</a></h1><p>In this Quickstart guide, you will learn how to get started with <a href="https://github.com/terramate-io/terramate" target="_blank" rel="noreferrer">Terramate CLI</a> from scratch by building a basic Terramate project that manages Terraform in stacks using the most essential Terramate features, such as stacks, code generation, orchestration, and change detection.</p><p>If you want to get an overview of what Terramate CLI is and how it works, please read the <a href="./../../introduction">introduction guide</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Join the <em><strong><a href="https://terramate.io/discord" target="_blank" rel="noreferrer">Terramate community</a></strong></em> on Discord if you have questions, need help, or to join a fun community focussing on all things Infrastructure as Code. Come aboard ‚õµÔ∏èüè¥‚Äç‚ò†Ô∏è</p><p>üëâ <a href="https://terramate.io/discord" target="_blank" rel="noreferrer">https://terramate.io/discord</a></p></div><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">‚Äã</a></h2><p>Terramate works best when used inside a git repository. This repository does not need to be remote or synchronized to any VCS Platform such as GitHub, GitLab, or BitBucket - a local repository is a great start to test things.</p><p>In this Quickstart Guide, we will do the following:</p><ul><li>Initialize a new git repository</li><li>Create two stacks <code>first</code> and <code>second</code> and learn about Terramate&#39;s <a href="./../change-detection/">Change Detection</a></li><li>Generate a Terraform Local Backend configuration in all stacks at once from a central place</li><li>Create a plain Terraform Null Resource in the <code>second</code> stack</li><li>Preview and apply the Null Resource using Terraform while leveraging <a href="./../change-detection/">Change Detection</a> and <a href="./../orchestration/">Orchestration</a> features of Terramate.</li></ul><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">‚Äã</a></h2><p>You will need the following tooling installed:</p><ul><li>A recent version of the <code>git</code> command line tool <ul><li>Terramate assumes <code>main</code> to be the default branch. Any other branch can be set using the <a href="./../projects/configuration"><code>terramate.config.git.default_branch</code></a> configuration option.</li></ul></li><li>A recent version of <a href="https://developer.hashicorp.com/terraform/install" target="_blank" rel="noreferrer">Terraform</a></li><li>Terramate CLI version <a href="https://github.com/terramate-io/terramate/releases/" target="_blank" rel="noreferrer">0.4.4</a> or above (for details on how to install Terramate CLI, please see the <a href="./../installation">installation guide</a>)</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also use <a href="https://github.com/opentofu/opentofu" target="_blank" rel="noreferrer">OpenTofu</a> instead of <a href="https://github.com/hashicorp/terraform" target="_blank" rel="noreferrer">Terraform</a> to complete this guide.</p></div><h3 id="create-a-new-git-repository" tabindex="-1">Create a new git repository <a class="header-anchor" href="#create-a-new-git-repository" aria-label="Permalink to &quot;Create a new git repository&quot;">‚Äã</a></h3><p>These steps initialize a new git repository, navigate into the new repository and create an initial first commit. Terramate&#39;s <a href="./../change-detection/">Change Detection</a> needs at least two commits inside a repository to work: one commit to compare the changes to and another commit introducing changes.</p><p>As a first step, create a new git repository and navigate into it:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terramate-quickstart</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terramate-quickstart</span></span></code></pre></div><p>Once you created the repository, create the first commit:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --allow-empty</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Initial empty commit&#39;</span></span></code></pre></div><h2 id="create-the-first-stack" tabindex="-1">Create the first stack <a class="header-anchor" href="#create-the-first-stack" aria-label="Permalink to &quot;Create the first stack&quot;">‚Äã</a></h2><p>Now that the repository is ready, we can create our first Terramate Stack. We will give the stack an optional <code>name</code> and <code>description</code> at creation time. Name and description can be used to keep track of the purpose and details of a stack. Terramate will ensure that on creation, each stack gets an <code>id</code> set automatically if not defined by the user. This ID is a <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier" target="_blank" rel="noreferrer"><code>UUID</code></a> by default, guaranteeing the required uniqueness within the repository. It is recommended to use UUIDs here, but it is optional.</p><p>The required argument defines a path to the stack that will be created. The path can be any directory with any level of child directories.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;A first stack&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;The very first Terramate Stack of the Quickstart guide&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  stacks/first</span></span></code></pre></div><p>The create command creates a file <code>stack.tm.hcl</code> containing a <code>stack {}</code> block to configure the stack, which should look something like this.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stacks/first/stack.tm.hcl</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;A first stack&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;The very first Terramate Stack of the Quickstart guide&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;935ff534-3c7c-4cbe-a156-691713bdfaec&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Stacks in Terramate are identified by a directory containing a <code>*.tm.hcl</code> file that contains a <code>stack {}</code> block. The file can have any name but the <a href="./../cmdline/create">create</a> command always creates a file named <code>stack.tm.hcl</code></p></div><p>The new stack can be committed to the repository by running:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stacks/first/stack.tm.hcl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Create the first terramate stack&#39;</span></span></code></pre></div><p>To verify that Terramate is aware of the new stack, we can run <a href="./../cmdline/list"><code>terramate list</code></a>.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-S_AtX" id="tab-MWsQv2H" checked="checked"><label for="tab-MWsQv2H">shell</label><input type="radio" name="group-S_AtX" id="tab-IQybbSL"><label for="tab-IQybbSL">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>stacks/first</span></span></code></pre></div></div></div><h2 id="create-a-second-stack" tabindex="-1">Create a second stack <a class="header-anchor" href="#create-a-second-stack" aria-label="Permalink to &quot;Create a second stack&quot;">‚Äã</a></h2><p>To create a second stack, we follow the same commands.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;A second stack&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;The second Terramate Stack of the Quickstart guide&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  stacks/second</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stacks/second/stack.tm.hcl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Create a second terramate stack&#39;</span></span></code></pre></div><p>To verify that Terramate is aware of both stacks, we can run <a href="./../cmdline/list"><code>terramate list</code></a> again.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Lg6-4" id="tab-bu2axOo" checked="checked"><label for="tab-bu2axOo">shell</label><input type="radio" name="group-Lg6-4" id="tab-TXQ2nlR"><label for="tab-TXQ2nlR">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>stacks/first</span></span>
<span class="line"><span>stacks/second</span></span></code></pre></div></div></div><h2 id="change-detection-in-action" tabindex="-1">Change detection in action <a class="header-anchor" href="#change-detection-in-action" aria-label="Permalink to &quot;Change detection in action&quot;">‚Äã</a></h2><p>As we created our stacks step by step and created a git commit per stack, we can leverage Terramate‚Äôs <a href="./../change-detection/">Change Detection</a> to see what changes we introduced in our latest commit.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-cbTWE" id="tab-ERt9t4M" checked="checked"><label for="tab-ERt9t4M">shell</label><input type="radio" name="group-cbTWE" id="tab-gFOYIn_"><label for="tab-gFOYIn_">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --changed</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>stacks/second</span></span></code></pre></div></div></div><p>By running the command mentioned above, you will see only the second stack is listed now, as we newly introduced the second stack without changing the first stack. Terramate‚Äôs <a href="./../change-detection/">Change Detection</a> is based on a <a href="./../change-detection/integrations/git">Git Integration</a> but also supports more integrations like <a href="./../change-detection/integrations/terraform">Terraform</a> to detect affected stacks using a local Terraform Module that has been updated outside of the stack.</p><h2 id="code-generation" tabindex="-1">Code generation <a class="header-anchor" href="#code-generation" aria-label="Permalink to &quot;Code generation&quot;">‚Äã</a></h2><p>Empty stacks are of not much use. One of Terramate‚Äôs primary use cases is orchestrating Terraform and generating code for it - but Terramate is not limited to Terraform and can also be used with other tooling such as OpenTofu, Terragrunt, Kubernetes, Helm, CloudFormation, etc.</p><p>Every Terraform stack will need a backend configuration. For the sake of this Quickstart Guide, we will use the Terraform local backend.</p><p>To generate backend code we create a file called <code>stacks/backend.tm.hcl</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stacks/backend.tm.hcl</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">generate_hcl &quot;backend.tf&quot; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  content {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    terraform {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      backend &quot;local&quot; {}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span></code></pre></div><p>This configuration tells Terramate to generate a <code>backend.tf</code> file in every stack it can reach within the <code>stacks/</code> directory. In this case our <code>first</code> and <code>second</code> stack.</p><p>To trigger the code generation we need to run the <a href="./../cmdline/generate"><code>generate</code></a> command:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-7eHh2" id="tab-B_E2RGC" checked="checked"><label for="tab-B_E2RGC">shell</label><input type="radio" name="group-7eHh2" id="tab-VWn2-Ge"><label for="tab-VWn2-Ge">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Code generation report</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Successes:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- /stacks/first</span></span>
<span class="line"><span>	[+] backend.tf</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- /stacks/second</span></span>
<span class="line"><span>	[+] backend.tf</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Hint: &#39;+&#39;, &#39;~&#39; and &#39;-&#39; mean the file was created, changed and deleted, respectively.</span></span></code></pre></div></div></div><p>The generation report will report any changes in the generated code. When run twice, no changes will be made.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-lwRuA" id="tab-sVOXUSL" checked="checked"><label for="tab-sVOXUSL">shell</label><input type="radio" name="group-lwRuA" id="tab--xdYT2G"><label for="tab--xdYT2G">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Nothing to do, generated code is up to date</span></span></code></pre></div></div></div><p>Let‚Äôs commit the changes and generated code:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stacks</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Add a Terraform Backend Config to all stacks&#39;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>It&#39;s a recommended best practice to check in generated code to your repository. For details, please see <a href="./../code-generation/#best-practices">code generation best practices</a>.</p></div><h2 id="run-terraform-in-both-stacks" tabindex="-1">Run Terraform in both stacks <a class="header-anchor" href="#run-terraform-in-both-stacks" aria-label="Permalink to &quot;Run Terraform in both stacks&quot;">‚Äã</a></h2><p>The stacks created in the previous sections both represent isolated Terraform environments. To make them functional, we must run <code>terraform init</code> in both. This is where the Terramate Orchestration comes in handy, which allows us to <a href="./../orchestration/run-commands-in-stacks">run commands in stacks</a> with the <a href="./../cmdline/run">run</a> command. As mentioned before, Terramate is not limited to orchestrating Terraform but can run any command.</p><p>But before we can start, we need to prepare git to ignore terraform temporary files by adding a <code>.gitignore</code> file, which is located in the root directory of our repository:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># NOTE: </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># You might not want to add state and lock file here</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This is just convenient when running the quickstart guide</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.gitignore</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.terraform</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.terraform.lock.hcl</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">terraform.tfstate</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .gitignore</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Add .gitignore&#39;</span></span></code></pre></div><p>Now let‚Äôs initialize Terraform in all stacks:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-eMJjt" id="tab-Odj3OdK" checked="checked"><label for="tab-Odj3OdK">shell</label><input type="radio" name="group-eMJjt" id="tab-Ys7Qe1H"><label for="tab-Ys7Qe1H">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>terramate: Entering stack in /stacks/first</span></span>
<span class="line"><span>terramate: Executing command &quot;terraform init&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Initializing the backend...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Successfully configured the backend &quot;local&quot;! Terraform will automatically</span></span>
<span class="line"><span>use this backend unless the backend configuration changes.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Initializing provider plugins...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform has been successfully initialized!</span></span>
<span class="line"><span></span></span>
<span class="line"><span>You may now begin working with Terraform. Try running &quot;terraform plan&quot; to see</span></span>
<span class="line"><span>any changes that are required for your infrastructure. All Terraform commands</span></span>
<span class="line"><span>should now work.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>If you ever set or change modules or backend configuration for Terraform,</span></span>
<span class="line"><span>rerun this command to reinitialize your working directory. If you forget, other</span></span>
<span class="line"><span>commands will detect it and remind you to do so if necessary.</span></span>
<span class="line"><span>terramate: Entering stack in /stacks/second</span></span>
<span class="line"><span>terramate: Executing command &quot;terraform init&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Initializing the backend...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Successfully configured the backend &quot;local&quot;! Terraform will automatically</span></span>
<span class="line"><span>use this backend unless the backend configuration changes.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Initializing provider plugins...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform has been successfully initialized!</span></span>
<span class="line"><span></span></span>
<span class="line"><span>You may now begin working with Terraform. Try running &quot;terraform plan&quot; to see</span></span>
<span class="line"><span>any changes that are required for your infrastructure. All Terraform commands</span></span>
<span class="line"><span>should now work.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>If you ever set or change modules or backend configuration for Terraform,</span></span>
<span class="line"><span>rerun this command to reinitialize your working directory. If you forget, other</span></span>
<span class="line"><span>commands will detect it and remind you to do so if necessary.</span></span></code></pre></div></div></div><p>And run a Terraform plan:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-URbxR" id="tab-3hRzFxk" checked="checked"><label for="tab-3hRzFxk">shell</label><input type="radio" name="group-URbxR" id="tab-iUu0cHf"><label for="tab-iUu0cHf">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plan</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>terramate: Entering stack in /stacks/first</span></span>
<span class="line"><span>terramate: Executing command &quot;terraform plan&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>No changes. Your infrastructure matches the configuration.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed.</span></span>
<span class="line"><span>terramate: Entering stack in /stacks/second</span></span>
<span class="line"><span>terramate: Executing command &quot;terraform plan&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>No changes. Your infrastructure matches the configuration.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed.</span></span></code></pre></div></div></div><h2 id="add-terraform-resources" tabindex="-1">Add Terraform resources <a class="header-anchor" href="#add-terraform-resources" aria-label="Permalink to &quot;Add Terraform resources&quot;">‚Äã</a></h2><p>In this section, we create a Terraform <a href="https://registry.terraform.io/providers/hashicorp/null/latest/docs/resources/resource.html" target="_blank" rel="noreferrer">Null Resource</a> for the purpose of demonstration. Null Resources do not need to configure any cloud credentials as they do not create real resources but only virtual ones.</p><p>This example will show:</p><ul><li>You can use plain Terraform config in any stack and do not need to use Terramate‚Äôs <a href="./../code-generation/">Code Generation</a>.</li><li>Running only on changed stacks can save us time running and reviewing.</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stacks/second/null.tf</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">resource &quot;null_resource&quot; &quot;quickstart&quot; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stacks/second/null.tf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Add a null resource&quot;</span></span></code></pre></div><p>Applying the changes will need a sequence of re-initializing Terraform, and running <code>terraform apply</code> in the changed stacks. As we only added the resource to the <code>second</code> stack, we can leverage Terramate‚Äôs <a href="./../change-detection/">Change Detection</a> to run in the changed stack only too.</p><p>Running commands in stacks containing changes only, allows us to keep execution run times fast and blast radius small.</p><p>Re-initialize Terraform to download the null provider:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-mrHtH" id="tab-5IayzAT" checked="checked"><label for="tab-5IayzAT">shell</label><input type="radio" name="group-mrHtH" id="tab-wLK9CGy"><label for="tab-wLK9CGy">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --changed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>terramate: Entering stack in /stacks/second</span></span>
<span class="line"><span>terramate: Executing command &quot;terraform init&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Initializing the backend...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Initializing provider plugins...</span></span>
<span class="line"><span>- Finding latest version of hashicorp/null...</span></span>
<span class="line"><span>- Installing hashicorp/null v3.2.2...</span></span>
<span class="line"><span>- Installed hashicorp/null v3.2.2 (signed by HashiCorp)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform has created a lock file .terraform.lock.hcl to record the provider</span></span>
<span class="line"><span>selections it made above. Include this file in your version control repository</span></span>
<span class="line"><span>so that Terraform can guarantee to make the same selections by default when</span></span>
<span class="line"><span>you run &quot;terraform init&quot; in the future.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform has been successfully initialized!</span></span>
<span class="line"><span></span></span>
<span class="line"><span>You may now begin working with Terraform. Try running &quot;terraform plan&quot; to see</span></span>
<span class="line"><span>any changes that are required for your infrastructure. All Terraform commands</span></span>
<span class="line"><span>should now work.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>If you ever set or change modules or backend configuration for Terraform,</span></span>
<span class="line"><span>rerun this command to reinitialize your working directory. If you forget, other</span></span>
<span class="line"><span>commands will detect it and remind you to do so if necessary.</span></span></code></pre></div></div></div><p>Preview a plan:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-1L_vT" id="tab-iTVmRMt" checked="checked"><label for="tab-iTVmRMt">shell</label><input type="radio" name="group-1L_vT" id="tab-NZTf8Db"><label for="tab-NZTf8Db">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --changed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plan</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>terramate: Entering stack in /stacks/second</span></span>
<span class="line"><span>terramate: Executing command &quot;terraform plan&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:</span></span>
<span class="line"><span>  + create</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform will perform the following actions:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # null_resource.quickstart will be created</span></span>
<span class="line"><span>  + resource &quot;null_resource&quot; &quot;quickstart&quot; {</span></span>
<span class="line"><span>      + id = (known after apply)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Plan: 1 to add, 0 to change, 0 to destroy.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Note: You didn&#39;t use the -out option to save this plan, so Terraform can&#39;t guarantee to take exactly these actions if you run &quot;terraform apply&quot; now.</span></span></code></pre></div></div></div><p>After reviewing the plan, we can apply the changes:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-J7Pqh" id="tab-8aIXwNW" checked="checked"><label for="tab-8aIXwNW">shell</label><input type="radio" name="group-J7Pqh" id="tab-34QeyQL"><label for="tab-34QeyQL">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --changed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -auto-approve</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>terramate: Entering stack in /stacks/second</span></span>
<span class="line"><span>terramate: Executing command &quot;terraform apply -auto-approve&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:</span></span>
<span class="line"><span>  + create</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform will perform the following actions:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # null_resource.quickstart will be created</span></span>
<span class="line"><span>  + resource &quot;null_resource&quot; &quot;quickstart&quot; {</span></span>
<span class="line"><span>      + id = (known after apply)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Plan: 1 to add, 0 to change, 0 to destroy.</span></span>
<span class="line"><span>null_resource.quickstart: Creating...</span></span>
<span class="line"><span>null_resource.quickstart: Creation complete after 0s [id=6372471593458417750]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Apply complete! Resources: 1 added, 0 changed, 0 destroyed.</span></span></code></pre></div></div></div><p>When running <code>terraform plan</code> again, we expect no changes to be planned anymore:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-9dCBQ" id="tab-lcTyTjB" checked="checked"><label for="tab-lcTyTjB">shell</label><input type="radio" name="group-9dCBQ" id="tab-jyc9ui6"><label for="tab-jyc9ui6">output</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --changed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plan</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>terramate: Entering stack in /stacks/second</span></span>
<span class="line"><span>terramate: Executing command &quot;terraform plan&quot;</span></span>
<span class="line"><span>null_resource.quickstart: Refreshing state... [id=6372471593458417750]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>No changes. Your infrastructure matches the configuration.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed.</span></span></code></pre></div></div></div><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">‚Äã</a></h2><p>We hope this tutorial has helped you grasp the basics of Terramate. Here&#39;s a summary of what we learned:</p><ul><li>How to initialize a Terramate Repository with Git support</li><li>How to create <a href="./../stacks/">Terramate Stacks</a></li><li>How to leverage <a href="./../change-detection/">Change Detection</a> when <a href="./../stacks/manage">managing stacks</a> or <a href="./../orchestration/run-commands-in-stacks">running commands</a></li><li>How to <a href="./../code-generation/">generate code</a> (Terraform Backend) in all stacks to keep the configuration DRY</li><li>How to deploy Terraform using a local backend and <a href="https://registry.terraform.io/providers/hashicorp/null/latest/docs/resources/resource.html" target="_blank" rel="noreferrer">null resources</a> as an example</li><li>Terramate is not limited to executing Terraform, but can help scale Terraform for any use case</li></ul><p>Those examples hopefully give you a starting point and help you get insights into the capabilities of Terramate. This is just the tip of the iceberg and running code generation and change detection on scale can help you save a lot of time when maintaining or running Terraform.</p><h2 id="next-steps" tabindex="-1">Next steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next steps&quot;">‚Äã</a></h2><ul><li>Learn more about <a href="./../stacks/">Stacks</a></li><li>Learn more about <a href="./../orchestration/">Orchestration</a></li><li>Learn more about <a href="./../code-generation/">Code Generation</a></li><li>Learn more about <a href="./../change-detection/">Change Detection</a></li><li>Learn more about <a href="./../code-generation/variables/">Variables</a> available in Terramate such as <a href="./../code-generation/variables/globals">Globals</a> or <a href="./../code-generation/variables/metadata">Metadata</a>.</li><li>Learn more about <a href="https://blog.terramate.io/how-to-build-a-ci-cd-pipeline-for-terraform-with-terramate-on-github-actions-57de86d9e66a" target="_blank" rel="noreferrer">Running Terramate in CI/CD</a></li><li>Learn more about use cases outside of the Terraform Universe</li></ul><h2 id="join-the-community" tabindex="-1">Join the community <a class="header-anchor" href="#join-the-community" aria-label="Permalink to &quot;Join the community&quot;">‚Äã</a></h2><p>If you have questions or feature requests regarding Terramate, we encourage you to join our <a href="https://terramate.io/discord" target="_blank" rel="noreferrer">Discord Community</a> where we host regular events such as weekly Office hours. It&#39;s an excellent place to contact our team and fellow community members if you have questions regarding Terramate. Alternatively, you can also create an issue in the <a href="https://github.com/terramate-io/terramate" target="_blank" rel="noreferrer">Github repository</a>.</p>`,83),r=[t];function l(p,o,c,h,d,k){return e(),s("div",null,r)}const m=a(i,[["render",l]]);export{g as __pageData,m as default};
