import{_ as e,c as a,o as t,a4 as r}from"./chunks/framework.Bl20_RFa.js";const s="/assets/ls-linting.CpE3Yutj.png",k=JSON.parse('{"title":"Terramate Language Server (terramate-ls)","description":"Learn how to use the Language Server","frontmatter":{"title":"Terramate Language Server (terramate-ls)","description":"Learn how to use the Language Server"},"headers":[],"relativePath":"cli/editor-plugins/language-server.md","filePath":"cli/editor-plugins/language-server.md"}'),i={name:"cli/editor-plugins/language-server.md"},o=r('<h1 id="language-server-terramate-ls" tabindex="-1">Language Server (<code>terramate-ls</code>) <a class="header-anchor" href="#language-server-terramate-ls" aria-label="Permalink to &quot;Language Server (`terramate-ls`)&quot;">​</a></h1><p>The <code>terramate-ls</code> program is the <em>Terramate Language Server</em>, a tool that implements the <a href="https://microsoft.github.io/language-server-protocol/" target="_blank" rel="noreferrer">LSP</a> (<em>Language Server Protocol</em>) and then provides the same set of features to all editors that implement the protocol.</p><p>The <code>terramate-ls</code> is still in early stage development, then it&#39;s not battle tested and only supports basic features.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>The <code>terramate-ls</code> is distributed alongside the <code>terramate</code> binary. Check the <a href="./../installation">installation page</a> for details.</p><p>For details about how to setup it in your editor, check the <a href="./">editors</a> documentation.</p><h2 id="linting" tabindex="-1">Linting <a class="header-anchor" href="#linting" aria-label="Permalink to &quot;Linting&quot;">​</a></h2><p>When using <code>terramate-ls</code> whenever a file changes or is saved, the editor shows diagnostic messages.</p><p>See image below:</p><p><img src="'+s+'" alt="image"></p><h2 id="commands" tabindex="-1">Commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;Commands&quot;">​</a></h2><p><em>The documentation below only matters for editor&#39;s plugin maintainers.</em></p><h3 id="terramate-createstack" tabindex="-1"><code>terramate.createStack</code> <a class="header-anchor" href="#terramate-createstack" aria-label="Permalink to &quot;`terramate.createStack`&quot;">​</a></h3><p>This command creates a stack in the project&#39;s workspace. The supported arguments are:</p><ul><li><code>uri=&lt;target directory&gt;</code> (<strong>required</strong>): The target directory.</li><li><code>genid=true</code> (<em>optional</em>): If the <code>stack.id</code> must be generated or not.</li><li><code>name=&lt;name of the stack&gt;</code> (<em>optional</em>): The name of the stack.</li><li><code>description=&lt;stack description&gt;</code> (<em>optional</em>): The description of the stack.</li></ul><p>The command arguments are sent as a list of strings:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uri=file:///some/path/dir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name=my stack&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div>',17),n=[o];function l(c,d,h,m,p,g){return t(),a("div",null,n)}const f=e(i,[["render",l]]);export{k as __pageData,f as default};
