import{_ as e,c as t,o as a,a4 as r}from"./chunks/framework.Bl20_RFa.js";const o="/assets/module-change-detection.B4f4svW5.gif",_=JSON.parse('{"title":"Terraform Change Detection Integration","description":"Learn how Terramate can help to detect Terraform stacks that reference changed Terraform modules.","frontmatter":{"title":"Terraform Change Detection Integration","description":"Learn how Terramate can help to detect Terraform stacks that reference changed Terraform modules."},"headers":[],"relativePath":"cli/change-detection/integrations/terraform.md","filePath":"cli/change-detection/integrations/terraform.md"}'),n={name:"cli/change-detection/integrations/terraform.md"},c=r('<h1 id="terraform-change-detection-integration" tabindex="-1">Terraform Change Detection Integration <a class="header-anchor" href="#terraform-change-detection-integration" aria-label="Permalink to &quot;Terraform Change Detection Integration&quot;">​</a></h1><h2 id="module-change-detection" tabindex="-1">Module change detection <a class="header-anchor" href="#module-change-detection" aria-label="Permalink to &quot;Module change detection&quot;">​</a></h2><p>A Terraform stack can be composed of multiple local modules and if that&#39;s the case then any changes on a module that a stack references will mark the stack as changed. The rationale is that if any module referenced by a stack changes then the stack itself changed and needs to be re-deployed.</p><p>For more details see the example below:</p><p><img src="'+o+'" alt="Module Change Detection"></p><p>In order to do that, Terramate will parse all <code>.tf</code> files inside the stack and check if the local modules it depends on have changed.</p>',6),i=[c];function s(d,h,l,m,f,g){return a(),t("div",null,i)}const u=e(n,[["render",s]]);export{_ as __pageData,u as default};
