import{_ as e,c as t,o as a,a4 as n}from"./chunks/framework.Bl20_RFa.js";const f=JSON.parse('{"title":"tm_timestamp - Functions - Configuration Language","description":"The tm_timestamp function returns a string representation of the current date\\nand time.","frontmatter":{"title":"tm_timestamp - Functions - Configuration Language","description":"The tm_timestamp function returns a string representation of the current date\\nand time."},"headers":[],"relativePath":"cli/code-generation/functions/tm_timestamp.md","filePath":"cli/code-generation/functions/tm_timestamp.md"}'),i={name:"cli/code-generation/functions/tm_timestamp.md"},r=n('<h1 id="tm-timestamp-function" tabindex="-1"><code>tm_timestamp</code> Function <a class="header-anchor" href="#tm-timestamp-function" aria-label="Permalink to &quot;`tm_timestamp` Function&quot;">​</a></h1><p><code>tm_timestamp</code> returns a UTC timestamp string in <a href="https://tools.ietf.org/html/rfc3339" target="_blank" rel="noreferrer">RFC 3339</a> format.</p><p>In the Terraform language, timestamps are conventionally represented as strings using <a href="https://tools.ietf.org/html/rfc3339" target="_blank" rel="noreferrer">RFC 3339</a> &quot;Date and Time format&quot; syntax, and so <code>tm_timestamp</code> returns a string in this format.</p><p>The result of this function will change every second, so using this function directly with resource attributes will cause a diff to be detected on every Terraform run. We do not recommend using this function in resource attributes, but in rare cases it can be used in conjunction with <a href="https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#ignore_changes" target="_blank" rel="noreferrer">the <code>ignore_changes</code> lifecycle meta-argument</a> to take the timestamp only on initial creation of the resource. For more stable time handling, see the <a href="https://registry.terraform.io/providers/hashicorp/time" target="_blank" rel="noreferrer">Time Provider</a>.</p><p>Due to the constantly changing return value, the result of this function cannot be predicted during Terraform&#39;s planning phase, and so the timestamp will be taken only once the plan is being applied.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2018-05-13T07:44:12Z</span></span></code></pre></div><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_formatdate"><code>tm_formatdate</code></a> can convert the resulting timestamp to other date and time formats.</li></ul>',9),s=[r];function o(c,m,l,h,p,d){return a(),t("div",null,s)}const g=e(i,[["render",o]]);export{f as __pageData,g as default};
