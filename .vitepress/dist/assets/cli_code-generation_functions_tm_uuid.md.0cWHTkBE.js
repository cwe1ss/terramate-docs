import{_ as e,c as t,o as a,a4 as i}from"./chunks/framework.Bl20_RFa.js";const f=JSON.parse('{"title":"tm_uuid - Functions - Configuration Language","description":"The tm_uuid function generates a unique id.","frontmatter":{"title":"tm_uuid - Functions - Configuration Language","description":"The tm_uuid function generates a unique id."},"headers":[],"relativePath":"cli/code-generation/functions/tm_uuid.md","filePath":"cli/code-generation/functions/tm_uuid.md"}'),n={name:"cli/code-generation/functions/tm_uuid.md"},r=i('<h1 id="tm-uuid-function" tabindex="-1"><code>tm_uuid</code> Function <a class="header-anchor" href="#tm-uuid-function" aria-label="Permalink to &quot;`tm_uuid` Function&quot;">​</a></h1><p><code>tm_uuid</code> generates a unique identifier string.</p><p>The id is a generated and formatted as required by <a href="https://tools.ietf.org/html/rfc4122#section-4.4" target="_blank" rel="noreferrer">RFC 4122 section 4.4</a>, producing a Version 4 UUID. The result is a UUID generated only from pseudo-random numbers.</p><p>This function produces a new value each time it is called, and so using it directly in resource arguments will result in spurious diffs. We do not recommend using The <code>tm_uuid</code> function in resource configurations, but it can be used with care in conjunction with <a href="https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#ignore_changes" target="_blank" rel="noreferrer">the <code>ignore_changes</code> lifecycle meta-argument</a>.</p><p>In most cases we recommend using <a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs" target="_blank" rel="noreferrer">the <code>random</code> provider</a> instead, since it allows the one-time generation of random values that are then retained in the Terraform <a href="https://developer.hashicorp.com/terraform/language/state" target="_blank" rel="noreferrer">state</a> for use by future operations. In particular, <a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/id" target="_blank" rel="noreferrer"><code>random_id</code></a> can generate results with equivalent randomness to The <code>tm_uuid</code> function.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_uuid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b5ee72a3-54dd-c4b8-551c-4bdc0204cedb</span></span></code></pre></div><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_uuidv5"><code>tm_uuidv5</code></a>, which generates name-based UUIDs.</li></ul>',9),o=[r];function s(d,c,u,l,h,m){return a(),t("div",null,o)}const g=e(n,[["render",s]]);export{f as __pageData,g as default};
