import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.Bl20_RFa.js";const g=JSON.parse('{"title":"tm_filebase64 - Functions - Configuration Language","description":"The tm_filebase64 function reads the contents of the file at the given path and\\nreturns them as a base64-encoded string.","frontmatter":{"title":"tm_filebase64 - Functions - Configuration Language","description":"The tm_filebase64 function reads the contents of the file at the given path and\\nreturns them as a base64-encoded string."},"headers":[],"relativePath":"cli/code-generation/functions/tm_filebase64.md","filePath":"cli/code-generation/functions/tm_filebase64.md"}'),i={name:"cli/code-generation/functions/tm_filebase64.md"},n=s('<h1 id="tm-filebase64-function" tabindex="-1"><code>tm_filebase64</code> Function <a class="header-anchor" href="#tm-filebase64-function" aria-label="Permalink to &quot;`tm_filebase64` Function&quot;">​</a></h1><p><code>filebase64</code> reads the contents of a file at the given path and returns them as a base64-encoded string.</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tm_filebase64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path)</span></span></code></pre></div><p>The result is a Base64 representation of the raw bytes in the given file. Strings in the Terraform language are sequences of Unicode characters, so Base64 is the standard way to represent raw binary data that cannot be interpreted as Unicode characters. Resource types that operate on binary data will accept this data encoded in Base64, thus avoiding the need to decode the result of this function.</p><p>Terraform uses the &quot;standard&quot; Base64 alphabet as defined in <a href="https://tools.ietf.org/html/rfc4648#section-4" target="_blank" rel="noreferrer">RFC 4648 section 4</a>.</p><p>This function can be used only with functions that already exist as static files on disk at the beginning of a Terraform run. Language functions do not participate in the dependency graph, so this function cannot be used with files that are generated dynamically during a Terraform operation.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_filebase64(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/hello.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SGVsbG8gV29ybGQ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span></code></pre></div><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_file"><code>tm_file</code></a> also reads the contents of a given file, but interprets the data as UTF-8 text and returns the result directly as a string, without any further encoding.</li><li><a href="./tm_base64decode"><code>tm_base64decode</code></a> can decode a Base64 string representing bytes in UTF-8, but in practice <code>base64decode(filebase64(...))</code> is equivalent to the shorter expression <code>file(...)</code>.</li></ul>',10),o=[n];function r(l,h,c,d,p,u){return a(),t("div",null,o)}const b=e(i,[["render",r]]);export{g as __pageData,b as default};
