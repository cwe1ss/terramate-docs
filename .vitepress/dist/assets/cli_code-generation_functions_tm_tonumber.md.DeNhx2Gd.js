import{_ as s,c as i,o as n,a4 as a}from"./chunks/framework.Bl20_RFa.js";const u=JSON.parse('{"title":"tm_tonumber - Functions - Configuration Language","description":"The tm_tonumber function converts a value to a number.","frontmatter":{"title":"tm_tonumber - Functions - Configuration Language","description":"The tm_tonumber function converts a value to a number."},"headers":[],"relativePath":"cli/code-generation/functions/tm_tonumber.md","filePath":"cli/code-generation/functions/tm_tonumber.md"}'),t={name:"cli/code-generation/functions/tm_tonumber.md"},e=a(`<h1 id="tm-tonumber-function" tabindex="-1"><code>tm_tonumber</code> Function <a class="header-anchor" href="#tm-tonumber-function" aria-label="Permalink to &quot;\`tm_tonumber\` Function&quot;">​</a></h1><p><code>tm_tonumber</code> converts its argument to a number value.</p><p>Explicit type conversions are rarely necessary in Terraform because it will convert types automatically where required. Use the explicit type conversion functions only to normalize types returned in module outputs.</p><p>Only numbers, <code>null</code>, and strings containing decimal representations of numbers can be converted to number. All other values will produce an error.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tonumber(1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tonumber(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tonumber(null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">null</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_tonumber(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Invalid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> function</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> argument</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Invalid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;v&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parameter:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> convert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;no&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> must</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> be</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> decimal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> representation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number.</span></span></code></pre></div>`,6),l=[e];function r(h,p,o,k,F,c){return n(),i("div",null,l)}const m=s(t,[["render",r]]);export{u as __pageData,m as default};
