import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.Bl20_RFa.js";const d="/assets/stacks-list.BlFMAEWI.png",k=JSON.parse('{"title":"Stack status","description":"","frontmatter":{},"headers":[],"relativePath":"cloud/stacks/status.md","filePath":"cloud/stacks/status.md"}'),o={name:"cloud/stacks/status.md"},c=s('<h1 id="stack-status" tabindex="-1">Stack status <a class="header-anchor" href="#stack-status" aria-label="Permalink to &quot;Stack status&quot;">​</a></h1><p>Each stack can be healthy or unhealthy (e.g. failed or drifted) depending on the result of deployments or drift runs.</p><p><img src="'+d+'" alt="Stacks List" title="Terramate Cloud Stacks LIst"></p><h2 id="healthy" tabindex="-1">Healthy <a class="header-anchor" href="#healthy" aria-label="Permalink to &quot;Healthy&quot;">​</a></h2><p>A <code>healthy</code> stack was deployed successfully and does not have any detected drifts.</p><p>This is the desired status for all stacks, which would be the case in an ideal world.</p><p>In the Infrastructure as Code lifecycle, we face Previews of planned changes, Deployments of changes, and Drifts identifying detected changes outside of code.</p><h2 id="failed" tabindex="-1">Failed <a class="header-anchor" href="#failed" aria-label="Permalink to &quot;Failed&quot;">​</a></h2><p>A <code>failed</code> stack is considered <code>unhealthy</code>. This status is reached after deployment of the stack failed to apply the planned changes successfully.</p><p>A <code>failed</code> stack can only become <code>healthy</code> again after a follow up deployment of the stack succeeds without errors or when a drift run does not detect any differences between the desired configuration (Code) and applied configuration (Cloud).</p><p>If a deployment fails in a stack that is in <code>drifted</code> state, the stack status will be updated to <code>failed</code>.</p><p>An example of a deployment command is <code>terraform apply</code> which can either successfully apply planned changes or fail in the process and leave the stack in a partially applied state.</p><h2 id="drifted" tabindex="-1">Drifted <a class="header-anchor" href="#drifted" aria-label="Permalink to &quot;Drifted&quot;">​</a></h2><p>A <code>drifted</code> stack is considered <code>unhealthy</code>. This status is reached after a drift run detects any differences between desired configuration (Code) and applied configuration (Cloud) on a <code>healthy</code> stack.</p><p>If a drift is detected in a <code>failed</code> stack, the status will NOT be updated to <code>drifted</code> as the drift is expected.</p><p>When no drift is detected for a <code>failed</code> stack, the stack status will be set to <code>healthy</code> again. This change is considered to be auto-healing as no user interaction in form of a new deployment is required.</p>',16),i=[c];function n(r,l,h,f,p,u){return a(),t("div",null,i)}const m=e(o,[["render",n]]);export{k as __pageData,m as default};
