import{_ as e,c as t,o as a,a4 as n}from"./chunks/framework.Bl20_RFa.js";const u=JSON.parse('{"title":"tm_base64gzip - Functions - Configuration Language","description":"The tm_base64gzip function compresses the given string with gzip and then\\nencodes the result in Base64.","frontmatter":{"title":"tm_base64gzip - Functions - Configuration Language","description":"The tm_base64gzip function compresses the given string with gzip and then\\nencodes the result in Base64."},"headers":[],"relativePath":"cli/code-generation/functions/tm_base64gzip.md","filePath":"cli/code-generation/functions/tm_base64gzip.md"}'),i={name:"cli/code-generation/functions/tm_base64gzip.md"},s=n('<h1 id="tm-base64gzip-function" tabindex="-1"><code>tm_base64gzip</code> Function <a class="header-anchor" href="#tm-base64gzip-function" aria-label="Permalink to &quot;`tm_base64gzip` Function&quot;">​</a></h1><p><code>tm_base64gzip</code> compresses a string with gzip and then encodes the result in Base64 encoding.</p><p>Terraform uses the &quot;standard&quot; Base64 alphabet as defined in <a href="https://tools.ietf.org/html/rfc4648#section-4" target="_blank" rel="noreferrer">RFC 4648 section 4</a>.</p><p>Strings in the Terraform language are sequences of unicode characters rather than bytes, so this function will first encode the characters from the string as UTF-8, then apply gzip compression, and then finally apply Base64 encoding.</p><p>While we do not recommend manipulating large, raw binary data in the Terraform language, this function can be used to compress reasonably sized text strings generated within the Terraform language. For example, the result of this function can be used to create a compressed object in Amazon S3 as part of an S3 website.</p><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_base64encode"><code>tm_base64encode</code></a> applies Base64 encoding <em>without</em> gzip compression.</li><li><a href="./tm_filebase64"><code>tm_filebase64</code></a> reads a file from the local filesystem and returns its raw bytes with Base64 encoding.</li></ul>',7),o=[s];function r(c,d,l,h,p,g){return a(),t("div",null,o)}const f=e(i,[["render",r]]);export{u as __pageData,f as default};
