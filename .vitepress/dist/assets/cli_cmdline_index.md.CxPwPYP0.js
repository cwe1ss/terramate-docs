import{_ as a,c as e,o as i,a4 as s}from"./chunks/framework.Bl20_RFa.js";const g=JSON.parse('{"title":"Terramate CLI","description":"Manage Stacks, Run Commands, Generate Code, Plan & Deploy IaC and Synchronize to and from Terramate Cloud to keep our IaC healthy.","frontmatter":{"title":"Terramate CLI","description":"Manage Stacks, Run Commands, Generate Code, Plan & Deploy IaC and Synchronize to and from Terramate Cloud to keep our IaC healthy."},"headers":[],"relativePath":"cli/cmdline/index.md","filePath":"cli/cmdline/index.md"}'),t={name:"cli/cmdline/index.md"},n=s(`<h1 id="command-line-interface-cli" tabindex="-1">Command Line Interface (CLI) <a class="header-anchor" href="#command-line-interface-cli" aria-label="Permalink to &quot;Command Line Interface (CLI)&quot;">​</a></h1><p>Terramate CLI helps you manage your daily IaC workloads:</p><ul><li>Manage stacks, maintain your IaC Code base, and keep it DRY via code generation.</li><li>Plan &amp; Deploy your IaC Changes in an effective way using advanced orchestration and change detection</li><li>Synchronize your distributed IaC set ups to and from Terramate Cloud to improve observability and keep your code base heatlhy</li></ul><p>This section will provide information to the most used CLI commands and also offers a complete reference of CLI commands available.</p><h2 id="quickstart" tabindex="-1">Quickstart <a class="header-anchor" href="#quickstart" aria-label="Permalink to &quot;Quickstart&quot;">​</a></h2><p>Please check out our <a href="./../getting-started/">quick start guide</a> or continue reading to see a summary of the commands used daily when working with terramate.</p><h2 id="create-a-stack" tabindex="-1">Create a Stack <a class="header-anchor" href="#create-a-stack" aria-label="Permalink to &quot;Create a Stack&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;My New Stack&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/to/stack</span></span></code></pre></div><h2 id="import-terraform-configurations" tabindex="-1">Import Terraform configurations <a class="header-anchor" href="#import-terraform-configurations" aria-label="Permalink to &quot;Import Terraform configurations&quot;">​</a></h2><p>Import existing Terragrunt projects in no time.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all-terraform</span></span></code></pre></div><h2 id="import-terragrunt-configurations" tabindex="-1">Import Terragrunt configurations <a class="header-anchor" href="#import-terragrunt-configurations" aria-label="Permalink to &quot;Import Terragrunt configurations&quot;">​</a></h2><p>Import existing Terragrunt projects in no time.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all-terragrunt</span></span></code></pre></div><h2 id="list-changed-stacks" tabindex="-1">List changed stacks <a class="header-anchor" href="#list-changed-stacks" aria-label="Permalink to &quot;List changed stacks&quot;">​</a></h2><p>List stacks changed in the current branch or since the last merged pull request</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --changed</span></span></code></pre></div><h2 id="run-commands-in-stacks" tabindex="-1">Run commands in stacks <a class="header-anchor" href="#run-commands-in-stacks" aria-label="Permalink to &quot;Run commands in stacks&quot;">​</a></h2><p>Terramate can execute any command in stack. Commands can be executed in parallel to speed up the execution.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --parallel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plan</span></span></code></pre></div><h2 id="run-terramate-script-in-stacks" tabindex="-1">Run Terramate Script in stacks <a class="header-anchor" href="#run-terramate-script-in-stacks" aria-label="Permalink to &quot;Run Terramate Script in stacks&quot;">​</a></h2><p>A Terramate Script provides a simple interface (<code>terraform deploy</code>) for running a complex sequence of commands like <code>terrform init</code>, <code>terraform validate</code>, <code>terraform plan</code>, <code>terraform apply</code>. Scripts are user defined and can execute any command.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> script</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --changed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span></span></code></pre></div><h2 id="trigger-code-generation" tabindex="-1">Trigger Code Generation <a class="header-anchor" href="#trigger-code-generation" aria-label="Permalink to &quot;Trigger Code Generation&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span></code></pre></div><h2 id="login-to-terramate-cloud" tabindex="-1">Login to Terramate Cloud <a class="header-anchor" href="#login-to-terramate-cloud" aria-label="Permalink to &quot;Login to Terramate Cloud&quot;">​</a></h2><p>Bring Terramate CLI to the next level by enhancing it with Terramate Cloud Features. After Sign Up you can login from CLI to start synchronizing data to the Cloud. This is mostly useful in automation but can also be used from your local machine. Many command support cloud features.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span></span></code></pre></div><h2 id="reconcile-detected-drifts" tabindex="-1">Reconcile detected drifts <a class="header-anchor" href="#reconcile-detected-drifts" aria-label="Permalink to &quot;Reconcile detected drifts&quot;">​</a></h2><p>Combining Terramate CLI and Cloud can support you to reconcile known drifts: The following command runs a <code>terraform deploy</code> Terramate Script (to be defined by you) on all drifted stacks (as known by Terramate Cloud) on all stacks that are tagged with <code>auto-reconcile-drift</code>. You can add this to your CI/CD automation to auto reconcile drifts when they happen.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> script</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cloud-status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> drifted</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tags</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto-reconcile-drift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span></span></code></pre></div><h2 id="available-global-options" tabindex="-1">Available global options <a class="header-anchor" href="#available-global-options" aria-label="Permalink to &quot;Available global options&quot;">​</a></h2><p>To view a list of available commands and global flags, execute <code>terramate --help</code>. All sub-commands support the <code>--help</code> flag as well for specific details.</p><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><ul><li><p><code>-h, --help</code> Show context-sensitive help.</p></li><li><p><code>-C, --chdir &lt;directory&gt;</code> Sets working directory.</p></li><li><p><code>-v, --verbose &lt;level&gt;</code> Increase verboseness of output.</p></li><li><p><code>--quiet</code> Disable output.</p></li><li><p><code>--log-level &lt;level&gt;</code> Log level to use: &#39;disabled&#39;, &#39;trace&#39;, &#39;debug&#39;, &#39;info&#39;, &#39;warn&#39;, &#39;error&#39;, or &#39;fatal&#39;</p></li><li><p><code>--log-fmt &lt;format&gt;</code> Log format to use: &#39;console&#39;, &#39;text&#39;, or &#39;json&#39;.</p></li><li><p><code>--log-destination &lt;channel&gt;</code> Destination of log messages.</p></li></ul><h2 id="auto-completions" tabindex="-1">Auto Completions <a class="header-anchor" href="#auto-completions" aria-label="Permalink to &quot;Auto Completions&quot;">​</a></h2><p>Terramate supports autocompletion of commands for <code>bash</code>, <code>zsh</code> and <code>fish</code>. To install the completion just run the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install-completions</span></span></code></pre></div><h2 id="cli-configuration" tabindex="-1">CLI Configuration <a class="header-anchor" href="#cli-configuration" aria-label="Permalink to &quot;CLI Configuration&quot;">​</a></h2><p>Terramate supports a per-user configuration file called <code>.terramaterc</code> (or <code>terramate.rc</code> on Windows) which applies to all Terramate projects in the user&#39;s machine by setting up default values for some CLI flags.</p><p>The configuration file is a simple HCL file containing top-level attributes. The attribute expressions must only contain literal values (<code>number</code>, <code>string</code>, etc) and no function calls.</p><p>Not all CLI flags can be configured by the configuration file.</p><p>Below is a list of options:</p><ul><li><code>user_terramate_dir</code> (<code>string</code>)</li></ul><p>Configures an alternative location for the local <code>~/.terramate.d</code> (or <code>%APPDATA%/.terramate.d</code> on Windows).</p><ul><li><code>disable_checkpoint</code> (<code>boolean</code>)</li></ul><p>When set to <code>true</code>, disables <a href="./../configuration/upgrade-check">upgrade and security bulletin checks</a>. This is similar to exporting the <code>DISABLE_CHECKPOINT=1</code> environment variable.</p><ul><li><code>disable_checkpoint_signature</code> (<code>boolean</code>)</li></ul><p>when set to <code>true</code>, still allows the <a href="./../configuration/upgrade-check">upgrade and security bulletin checks</a> described above but disables the use of an anonymous id used to de-duplicate warning messages.</p><h3 id="location" tabindex="-1">Location <a class="header-anchor" href="#location" aria-label="Permalink to &quot;Location&quot;">​</a></h3><p>The configuration should be placed in a different path depending on the operating system:</p><p>On <em>Windows</em>, the file must be named <code>terraform.rc</code> and placed in the user&#39;s <code>%APPDATA%</code> directory. The location of this directory depends on your <em>Windows</em> version and system configuration. You can use the command below in <em>PowerShell</em> to find its location:</p><div class="language-PowerShell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">PowerShell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">APPDATA</span></span></code></pre></div><p>On Unix-based systems (<em>Linux</em>, <em>MacOS</em>, <em>*BSD</em>, etc), the file must be named <code>.terraformrc</code> and placed in the home directory of the relevant user.</p><p>The default location of the Terramate CLI configuration file can also be specified using the <code>TM_CLI_CONFIG_FILE</code> environment variable. Example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TM_CLI_CONFIG_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/terramaterc</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> terramate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div>`,56),o=[n];function r(l,d,h,c,p,k){return i(),e("div",null,o)}const m=a(t,[["render",r]]);export{g as __pageData,m as default};
