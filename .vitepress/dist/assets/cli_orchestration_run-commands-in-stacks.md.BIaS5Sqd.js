import{_ as s,c as a,o as t,a4 as i}from"./chunks/framework.Bl20_RFa.js";const u=JSON.parse('{"title":"Run Commands in Stacks","description":"Learn how to orchestrate the execution of commands in stacks with the terramate run command.","frontmatter":{"title":"Run Commands in Stacks","description":"Learn how to orchestrate the execution of commands in stacks with the terramate run command."},"headers":[],"relativePath":"cli/orchestration/run-commands-in-stacks.md","filePath":"cli/orchestration/run-commands-in-stacks.md"}'),e={name:"cli/orchestration/run-commands-in-stacks.md"},n=i(`<h1 id="run-commands-in-stacks" tabindex="-1">Run Commands in Stacks <a class="header-anchor" href="#run-commands-in-stacks" aria-label="Permalink to &quot;Run Commands in Stacks&quot;">​</a></h1><p>Terramate CLI allows you to orchestrate the execution of stacks by running commands in all stacks or filtering stacks using certain criteria.</p><h2 id="run-commands-in-all-stacks" tabindex="-1">Run commands in all stacks <a class="header-anchor" href="#run-commands-in-all-stacks" aria-label="Permalink to &quot;Run commands in all stacks&quot;">​</a></h2><p>Running commands in stacks sequentially can be done with the <a href="./../cmdline/run">run</a> command.</p><p><strong>Example:</strong> Run commands in all stacks with <code>terramate run</code></p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">terramate run </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <a href="./../cmdline/list"><code>list --run-order</code></a> command returns a list that describes the order of execution of your stacks.</p></div><h2 id="run-commands-in-a-subset-of-stacks-using-filter" tabindex="-1">Run commands in a subset of stacks using filter <a class="header-anchor" href="#run-commands-in-a-subset-of-stacks-using-filter" aria-label="Permalink to &quot;Run commands in a subset of stacks using filter&quot;">​</a></h2><p>There are three main ways to filter stacks targeted in <code>terramate run</code>: <strong>scope</strong>, <strong>tags</strong> and <strong>change detection</strong>.</p><h3 id="filter-by-scope" tabindex="-1">Filter by scope <a class="header-anchor" href="#filter-by-scope" aria-label="Permalink to &quot;Filter by scope&quot;">​</a></h3><p>Terramate uses the current directory it is being executed to filter out stacks, i.e., limit the scope of the execution. So if you execute <code>terramate</code> from the project&#39;s root directory, all stacks will be selected and change to inner directories in the project structure will select only stacks that are children of the current directory.</p><p>The <code>-C &lt;path&gt;</code> flag can be used to change the scope without having to <code>cd</code> to the directory.</p><p><strong>Example:</strong> Change the scope to <code>some/dir</code></p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">terramate run </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C some</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="filter-by-tags" tabindex="-1">Filter by tags <a class="header-anchor" href="#filter-by-tags" aria-label="Permalink to &quot;Filter by tags&quot;">​</a></h3><p>Stacks can also be tagged to allow for further targeting.</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Some Application&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kubernetes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;f2b426b2-f614-4fa5-8f12-af78e5dcc13e&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Tags can be used to filter stacks on any command using <code>--tags</code> (or <code>--no-tags</code> to exclude). Logical <strong>AND</strong> and <strong>OR</strong> can be achieved with the <code>:</code> and <code>,</code> operators.</p><p><strong>Example:</strong> Run a command in all stacks tagged with <code>kubernetes</code> or <code>k8s</code>.</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">terramate run </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tags kubernetes,k8s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="filter-for-changed-stacks" tabindex="-1">Filter for changed stacks <a class="header-anchor" href="#filter-for-changed-stacks" aria-label="Permalink to &quot;Filter for changed stacks&quot;">​</a></h3><p>The <code>--changed</code> flag will filter by stacks that have changed in Git compared to a base ref using the <a href="./../change-detection/integrations/git">Git integration</a> of the <a href="./../change-detection/">change detection</a>.</p><p><strong>Example:</strong> Execute a command in all stacks that contain changes</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">terramate run </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">changed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The default base ref is <code>origin/main</code> when working in a feature branch and <code>HEAD^</code> when on main. The base ref can be changed in the project configuration (or with <code>-B</code>), but the defaults allow for the most common workflow where all changed stacks in a feature branch should be previewed in a PR and applied on merge.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Terramate supports importing code with <code>import</code> blocks to allow for code re-use, and when the source of one of these <code>import</code> blocks changes, all stacks where the code is imported will be marked as changed.</p></div><p>It is possible to monitor files that are outside the stack for changes using the <code>watch</code> property in the configuration of a stack.</p><p><strong>Example:</strong> Watch for changes outside the current stack</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Some Application&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kubernetes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;f2b426b2-f614-4fa5-8f12-af78e5dcc13e&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  watch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;/path/to/file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="changing-the-run-scope-and-order" tabindex="-1">Changing the run scope and order <a class="header-anchor" href="#changing-the-run-scope-and-order" aria-label="Permalink to &quot;Changing the run scope and order&quot;">​</a></h3><p>Sometimes, you want to change the <a href="./#order-of-execution">default order of execution</a>, which can be done with the <a href="./../stacks/configuration#stackbefore-setstringoptional"><code>before</code></a> and <a href="./../stacks/configuration#stackafter-setstringoptional"><code>after</code></a> attributes in the configuration of a stack. For details, please see the <a href="./../stacks/configuration#configuring-the-order-of-execution">stacks configuration</a> documentation.</p><p>By default, Terramate will run against all child stacks selected by the filter (e.g., all changed stacks with <code>--changed</code>). It is possible to add explicit dependencies for stacks not beneath the current directory by using <a href="./../stacks/configuration#stackwatch-listoptional"><code>watch</code></a>, <a href="./../stacks/configuration#stackwants-setstringoptional"><code>wants</code></a> and <a href="./../stacks/configuration#stackwanted_by-setstringoptional"><code>wanted_by</code></a> attributes.</p>`,32),o=[n];function h(c,l,r,d,p,k){return t(),a("div",null,o)}const m=s(e,[["render",h]]);export{u as __pageData,m as default};
