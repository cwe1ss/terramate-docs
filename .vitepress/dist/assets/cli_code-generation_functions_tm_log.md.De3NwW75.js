import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.Bl20_RFa.js";const m=JSON.parse('{"title":"tm_log - Functions - Configuration Language","description":"The tm_log function returns the logarithm of a given number in a given base.","frontmatter":{"title":"tm_log - Functions - Configuration Language","description":"The tm_log function returns the logarithm of a given number in a given base."},"headers":[],"relativePath":"cli/code-generation/functions/tm_log.md","filePath":"cli/code-generation/functions/tm_log.md"}'),e={name:"cli/code-generation/functions/tm_log.md"},t=n(`<h1 id="tm-log-function" tabindex="-1"><code>tm_log</code> Function <a class="header-anchor" href="#tm-log-function" aria-label="Permalink to &quot;\`tm_log\` Function&quot;">​</a></h1><p><code>tm_log</code> returns the logarithm of a given number in a given base.</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tm_log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, base)</span></span></code></pre></div><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_log(50,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.6989700043360185</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_log(16,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4</span></span></code></pre></div><p><code>log</code> and <code>ceil</code> can be used together to find the minimum number of binary digits required to represent a given number of distinct values:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_ceil(log(15,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_ceil(log(16,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_ceil(log(17,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">5</span></span></code></pre></div>`,7),l=[t];function h(p,o,c,r,d,k){return a(),i("div",null,l)}const u=s(e,[["render",h]]);export{m as __pageData,u as default};
