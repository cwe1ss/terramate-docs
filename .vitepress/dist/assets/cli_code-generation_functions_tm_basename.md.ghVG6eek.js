import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.Bl20_RFa.js";const f=JSON.parse('{"title":"tm_basename - Functions - Configuration Language","description":"The tm_basename function removes all except the last portion from a filesystem\\npath.","frontmatter":{"title":"tm_basename - Functions - Configuration Language","description":"The tm_basename function removes all except the last portion from a filesystem\\npath."},"headers":[],"relativePath":"cli/code-generation/functions/tm_basename.md","filePath":"cli/code-generation/functions/tm_basename.md"}'),n={name:"cli/code-generation/functions/tm_basename.md"},o=s('<h1 id="tm-basename-function" tabindex="-1"><code>tm_basename</code> Function <a class="header-anchor" href="#tm-basename-function" aria-label="Permalink to &quot;`tm_basename` Function&quot;">​</a></h1><p><code>tm_basename</code> takes a string containing a filesystem path and removes all except the last portion from it.</p><p>This function works only with the path string and does not access the filesystem itself. It is therefore unable to take into account filesystem features such as symlinks.</p><p>If the path is empty then the result is <code>&quot;.&quot;</code>, representing the current working directory.</p><p>The behavior of this function depends on the host platform. On Windows systems, it uses backslash <code>\\</code> as the path segment separator. On Unix systems, the slash <code>/</code> is used.</p><p>Referring directly to filesystem paths in resource arguments may cause spurious diffs if the same configuration is applied from multiple systems or on different host operating systems. We recommend using filesystem paths only for transient values, such as the argument to <a href="./tm_file"><code>tm_file</code></a> (where only the contents are then stored) or in <code>connection</code> and <code>provisioner</code> blocks.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tm_basename(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;foo/bar/baz.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">baz.txt</span></span></code></pre></div><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li><a href="./tm_dirname"><code>tm_dirname</code></a> returns all of the segments of a filesystem path <em>except</em> the last, discarding the portion that would be returned by <code>tm_basename</code>.</li></ul>',10),i=[o];function r(c,l,h,m,d,p){return a(),t("div",null,i)}const _=e(n,[["render",r]]);export{f as __pageData,_ as default};
