import{_ as e,c as t,o as a,a4 as o}from"./chunks/framework.Bl20_RFa.js";const f=JSON.parse('{"title":"Metadata","description":"Learn how stacks help you to split up your infrastructure code and configuration such as Terraform into isolated units.","frontmatter":{"title":"Metadata","description":"Learn how stacks help you to split up your infrastructure code and configuration such as Terraform into isolated units."},"headers":[],"relativePath":"cli/code-generation/variables/metadata.md","filePath":"cli/code-generation/variables/metadata.md"}'),r={name:"cli/code-generation/variables/metadata.md"},s=o('<h1 id="terramate-metadata-variables" tabindex="-1">Terramate Metadata Variables <a class="header-anchor" href="#terramate-metadata-variables" aria-label="Permalink to &quot;Terramate Metadata Variables&quot;">​</a></h1><p>Terramate supports access to metadata of stacks, projects and the repository in the <code>terramate</code> namespace.</p><h2 id="project-metadata" tabindex="-1">Project Metadata <a class="header-anchor" href="#project-metadata" aria-label="Permalink to &quot;Project Metadata&quot;">​</a></h2><p>Project metadata is the same independent of a stack.</p><ul><li>The <code>terramate</code> object provides access to project metadata. <ul><li><code>version</code> (string) The Terramate version.</li><li><code>stacks.list</code> (list of strings) List of all stacks inside the project. Each stack is represented by its absolute path relative to the project root. The list will be ordered lexicographically.</li><li><code>root.path.fs.absolute</code> (string) The absolute path of the project root directory. Will be the same for all stacks.</li><li><code>root.path.fs.basename</code> (string) The base name of the project root directory. Will be the same for all stacks.</li></ul></li></ul><h2 id="stack-metadata" tabindex="-1">Stack Metadata <a class="header-anchor" href="#stack-metadata" aria-label="Permalink to &quot;Stack Metadata&quot;">​</a></h2><ul><li>The <code>terramate.stack</code> object grants access to stack metadata and is only available in the stack context. The following keys are available in the <code>terramate.stack</code> object and can be accessed with <code>terramate.stack.&lt;key&gt;</code>, e.g. <code>terramate.stack.id</code>. <ul><li><code>id</code> (string) The user-defined <code>id</code> of the stack.</li><li><code>name</code> (string) The user-defined <code>name</code> of the stack.</li><li><code>description</code> (string) The user-defined <code>description</code> of the stack.</li><li><code>tags</code> (list of string) The user-defined <code>tags</code> of the stack.</li><li><code>path</code> (object) An object defining the path of a stack within the repository in different ways <ul><li><code>absolute</code> (string) The absolute path of the stack within the repository.</li><li><code>basename</code> (string) The base name of the stack path.</li><li><code>relative</code> (string) The relative path of the stack from the repository root.</li><li><code>to_root</code> (string) The relative path from the stack to the repository root (upwards).</li></ul></li></ul></li></ul><h2 id="repository-metadata" tabindex="-1">Repository Metadata <a class="header-anchor" href="#repository-metadata" aria-label="Permalink to &quot;Repository Metadata&quot;">​</a></h2><ul><li>The <code>terramate.stacks</code> object grants access to a list of all stacks The following keys are available in the <code>terramate.stacks.</code> object and can be accessed with <code>terramate.stacks.&lt;key&gt;</code>, e.g. <code>terramate.stack.list:</code><ul><li><code>list</code> (list of string) A list of all absolute stack paths in the current repository.</li></ul></li></ul>',9),i=[s];function c(d,l,n,h,p,m){return a(),t("div",null,i)}const k=e(r,[["render",c]]);export{f as __pageData,k as default};
